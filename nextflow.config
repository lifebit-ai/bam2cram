// Please do not change the order of the numbered sections!
// The expected order is: 1. Parameters - 2. Profiles - 3. Process -  4. Executor

// There is a high chance it would break the configuration of 'profiles'

// 1. Parameters

// NOTE: 
// Initialise the values of the params to the preferred default value or to false
params {
    // input options
    input = false
    reference = false
    outdir = 'results'

    // report_dir is:
    // - the folder from the container that includes the scripts for NF <= v20.01 (bin)
    // - the ${projectDir}/bin folder of the root of the repo with the scripts for NF >= v20.10
    report_dir = '/opt/bin/'

    // when set to true, prints help and exits
    help = false
    
    // container for all processes, excluding those defined with 'withName' (see example below)
    container = 'lifebitai/samtools:latest'

    // process resources defaults
    cpus = 2
    memory = 4.GB
    time = 8.h
    disk = '30.GB'
    
    // max resources limits defaults
    max_cpus = 2
    max_memory = 4.GB
    max_time = 8.h
    
    // execution related defaults
    config = 'conf/standard.config'
    echo = false
    errorStrategy = 'finish'
    maxRetries = 9
    maxForks = 200
    queueSize = 200
    executor = false

    // google-lifesciences
    gls_bootDiskSize = '50.GB'
    gls_preemptible = true
    zone = 'us-east1-b'
    network = 'default'
    subnetwork = 'default'
}


// 2. Profiles


// Do not update the order because the values set in params scope will not be overwritten
// Do not attempt to simplify to 
// includeConfig params.config 
// outside of profiles scope, it will fail to update the values of the params
profiles {
    standard {includeConfig params.config}
    docker { docker.enabled = true }
    base {includeConfig 'conf/base.config'}
    google {includeConfig 'conf/google.config'}
    test {includeConfig 'conf/test.config'}
    local {includeConfig 'conf/test.config'}
    test_local {includeConfig 'conf/test_local.config'}
}

// 3. Process

// Do not change order of block, must follow after profiles scope (last section that updates params)
process {
    echo = params.echo
    cpus = params.cpus
    memory = params.memory
    maxRetries = params.maxRetries
    maxForks = params.maxForks
    container = params.container
    errorStrategy = params.errorStrategy    
}

// 4. Executor

executor {
    name = params.executor
    queueSize = params.queueSize
}

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
  if (type == 'memory') {
    try {
      if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
        return params.max_memory as nextflow.util.MemoryUnit
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
      return obj
    }
  } else if (type == 'time') {
    try {
      if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
        return params.max_time as nextflow.util.Duration
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
      return obj
    }
  } else if (type == 'cpus') {
    try {
      return Math.min( obj, params.max_cpus as int )
    } catch (all) {
      println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
      return obj
    }
  }
}